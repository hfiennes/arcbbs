;                  _________________________________________________
;                  [>                                             <]
;Project           [> ARCbbs                                      <]
;Author            [> Hugo Fiennes                                <]
;Date started      [> 04-April-1989                               <]
;                  [>                                             <]
;Module name       [> Fido PC_INT & PC_WORD & string store/load   <]
;Current version   [> 00.04                                       <]
;Version date      [> 25-January-1990                             <]
;State             [> Unfinished                                  <]
;                  [>                                             <]
;                  [>  This source is COPYRIGHT (c) 1989/1990 by  <]
;                  [>      Hugo Fiennes of The Serial Port        <]
;                  [>_____________________________________________<]

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Register names   Modified for new call standard (GOD acorn, I wish you'd
;                  stop chaging your mind...)
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

a1 RN 0
a2 RN 1
a3 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lk RN 14
pc RN 15

    AREA |C$$code|, CODE, READONLY

; Routines to read/write normal/reverse byte order non-word aligned PC_INT's
; and PC_LONG's.

;--- Store a PC_INT (a1) at (a2) : Reverse byte order : -----------------------

    EXPORT  put_rint
put_rint
    MOV     a3,a1,LSR#8      ;
    STRB    a3,[a2,#1]       ; Store hi byte
    STRB    a1,[a2,#0]       ; Store lo byte
    MOVS    pc,lk            ; Return

;--- Read a PC_INT from (a1) : Reverse byte order : ---------------------------

    EXPORT  get_rint
get_rint    
    LDRB    a2,[a1,#1]       ; Get hi byte
    LDRB    a1,[a1,#0]       ; Get lo byte
    ORR     a1,a1,a2,LSL#8   ; Mix
    MOVS    pc,lk            ; Return

;--- The end! -----------------------------------------------------------------

    AREA |C$$data|

|x$dataseg|

    END
