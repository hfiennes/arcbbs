;                    _____________________________________________
;                  [>                                             <]
;Project           [> ARCbbs                                      <]
;Author            [> Hugo Fiennes                                <]
;Date started      [> 04-April-1989                               <]
;                  [>                                             <]
;Module name       [> Time-critical port routines                 <]
;Current version   [> 00.96                                       <]
;Version date      [> 05-April-1993                               <]
;State             [> Unfinished                                  <]
;                  [>                                             <]
;                  [>    This source is COPYRIGHT © 1989-1993     <]
;                  [>     by Hugo Fiennes of The Serial Port      <]
;                  [>_____________________________________________<]

; SWI values

WriteC        * &00

PutByte       * 0
GetByte       * 1
PutBlock      * 2
GetBlock      * 3
CheckTXBuffer * 4
CheckRXBuffer * 5
FlushTXBuffer * 6
FlushRXBuffer * 7
ControlLines  * 8
ModemControl  * 9
ReadRXErrors  * 10
SendBreak     * 11
ExamineByte   * 12
Poll          * 19

X             * &00020000 ; mask to make a swi a RISC OS v-error swi

; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; Register names   Modified for new call standard (GOD acorn, I wish you'd
;                  stop chaging your mind...)
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

a1 RN 0
R0 RN 0
a2 RN 1
R1 RN 1
a3 RN 2
R2 RN 2
a4 RN 3
v1 RN 4
v2 RN 5
v3 RN 6
v4 RN 7
v5 RN 8
v6 RN 9
sl RN 10
fp RN 11
ip RN 12
sp RN 13
lk RN 14
pc RN 15

 AREA |C$$code|, CODE, READONLY

        IMPORT  snoop
        IMPORT  key_in
        IMPORT  key_out
        IMPORT  key_buffer
        IMPORT  msginterrupt
        IMPORT  snoop_buffer
        
        IMPORT  driver_block
        IMPORT  driver_port

;--- Port select --------------------------------------------------------------

        EXPORT  port_select
port_select
        STMFD   sp!,{lk}

        MOV     R0,#Poll
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        LDMFD   sp!,{pc}^

;--- Port DCD -----------------------------------------------------------------

        EXPORT  port_dcd
port_dcd
        STMFD   sp!,{lk}
        MOV     R0,#ModemControl
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        TST     R0,#(1<<3)
        MOVEQ   a1,#0
        MOVNE   a1,#-1
        LDMFD   sp!,{pc}^

;--- Port DTR -----------------------------------------------------------------

        EXPORT  port_dtr
port_dtr
        STMFD   sp!,{a1,lk}
        MOV     R0,#ControlLines
        LDR     R1,=driver_port
        LDR     R1,[R1]
        MOV     R2,#-1
        BL      driver_block

        BIC     R2,R0,#1
        LDMFD   sp!,{R0}
        CMP     R0,#0
        ORRNE   R2,R2,#1

        MOV     R0,#ControlLines
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        MOV     a1,#0
        STR     a1,inesc
        LDMFD   sp!,{pc}

;--- Port RTS -----------------------------------------------------------------

        EXPORT  port_rts
port_rts
        STMFD   sp!,{a1,lk}
        MOV     R0,#ControlLines
        LDR     R1,=driver_port
        LDR     R1,[R1]
        MOV     R2,#-1
        BL      driver_block

        BIC     R2,R0,#2
        LDMFD   sp!,{R0}
        CMP     R0,#0
        ORRNE   R2,R2,#2

        MOV     R0,#ControlLines
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        LDMFD   sp!,{pc}

;--- Port RX buffer -----------------------------------------------------------

        EXPORT  port_rxbuffer
port_rxbuffer
        STMFD   sp!,{lk}
        MOV     R0,#CheckRXBuffer
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        LDR     a4,=key_in        ; Get keypress (if any)
        LDR     a3,=key_out
        LDRB    a2,[a3]
        LDRB    a4,[a4]
        CMP     a2,a4
        ADDNE   a1,a1,#1
        LDMFD   sp!,{pc}^

;--- Port TX buffer -----------------------------------------------------------

        EXPORT  port_txbuffer
port_txbuffer
        STMFD   sp!,{lk}
        MOV     R0,#CheckTXBuffer
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block
        LDMFD   sp!,{pc}

;--- Port RX ------------------------------------------------------------------

        EXPORT port_rx
port_rx
        STMFD   sp!,{lk}
        LDR     a4,=key_in        ; Get keypress (if any)
        LDR     a3,=key_out
        LDRB    a2,[a3]
        LDRB    a4,[a4]
        CMP     a2,a4
        BNE     port_rxl

        MOV     R0,#GetByte
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block
        LDMFD   sp!,{pc}
                                           
port_rxl
        LDR     a4,=key_buffer
        LDRB    a1,[a4,a2]
        ADD     a2,a2,#1
        STRB    a2,[a3]
        LDMFD   sp!,{pc}

        EXPORT port_examinerx
port_examinerx
        STMFD   sp!,{lk}
        LDR     a4,=key_in        ; Get keypress (if any)
        LDR     a3,=key_out
        LDRB    a2,[a3]
        LDRB    a4,[a4]
        CMP     a2,a4
        BNE     port_exl

        MOV     R0,#ExamineByte
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block
        LDMFD   sp!,{pc}

port_exl
        LDR     a4,=key_buffer
        LDRB    a1,[a4,a2]
        LDMFD   sp!,{pc}

;--- Port TXwait --------------------------------------------------------------

inesc
        DCD     0

        EXPORT port_txw      
        IMPORT window_poll
port_txw
        STMFD   sp!,{v1,lk}
        MOV     v1,a1             ; Save it away for a while

port_txw_wait
        MOV     R2,v1             ; Get data into r1
        MOV     R0,#PutByte
        LDR     R1,=driver_port
        LDR     R1,[R1]
        BL      driver_block

        CMP     R0,#0
        BEQ     port_txw_send0
        BL      window_poll
        B       port_txw_wait

port_txw_send0
        LDR     a1,=snoop
        LDR     a1,[a1]
        CMP     a1,#0             ; Snooping?
        LDMEQFD sp!,{v1,pc}

        LDR     a1,=msginterrupt
        LDR     a1,[a1]
        CMP     a1,#0             ; Can we snoop?
        LDMNEFD sp!,{v1,pc}

        MOV     a1,v1
        BL      snoop_buffer

        LDMFD   sp!,{v1,pc}

    AREA |C$$data|

|x$dataseg|

    END
